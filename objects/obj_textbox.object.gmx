<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-20</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.gametype = "single";
global.extend = false;
global.temp_string = '';
installed = false
doorClosed = true
aConnected = false
bConnected = false
{
// initialize the text
  script_initlines();
  if global.username != ""
    script_addline("Welcome to SAGASHI Robot, " + string(global.username), c_lime)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>resistancy()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if string_width(keyboard_string) &gt; 300
    keyboard_string = string_copy(keyboard_string, 1, string_length(keyboard_string) - 1);
    
if keyboard_check(191) == 1
{
    if global.extend = false
    {
    global.extend = true;
    keyboard_string = "/";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Textbox Drawing
var textbox_xPos = 3;
var textbox_yPos = window_get_height() - 163;
draw_set_color(c_white);
if global.extend = true 
{
    global.maxline = 18;
    draw_sprite(spr_textbox2, 0, view_xview[0] + (textbox_xPos), view_yview[0] + (textbox_yPos - 120));
    script_drawlines(view_xview[0] + textbox_xPos + 2, view_yview[0] + (textbox_yPos - 136));
    draw_set_color(c_white);
    draw_text(view_xview[0] + (textbox_xPos + 2), view_yview[0] + (textbox_yPos + 142), keyboard_string +'|');
} else {
    global.maxline = 10;
    draw_sprite(spr_textbox, 0, view_xview[0] + (textbox_xPos), view_yview[0] + (textbox_yPos));
    script_drawlines(view_xview[0] + (textbox_xPos + 2), view_yview[0] + (textbox_yPos));
    draw_set_font(fnt_normal);
    draw_set_color(c_white);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.extend = true {
if keyboard_string = ''
    exit;
    
    if string_pos(' ',keyboard_string) = 1  // Spaces.. \\
    {
        items = string_copy(keyboard_string,2,string_length(keyboard_string)-1)
        if items = ' ' 
        {
            keyboard_string = "";
        }
        audio_play_sound(chat_error,1,false)
        exit;
    }
    
    
    
    if string_pos('/enable ',keyboard_string) = 1
    {
    items = string_copy(keyboard_string,9,string_length(keyboard_string)-8)
    switch (items)
        {
          case "flashlight":
          if global.flashlight = 2 { // case: ON
          script_addline("Your flashlight is already turned on!", c_red) audio_play_sound(chat_error,1,false)
          } else if global.flashlight = 1 { // case: OFF
          global.flashlight = 2;
          script_addline("You turned on your flashlight!", c_green) audio_play_sound(chat_command,1,false)
          global.extend = false;
          } else if global.flashlight = 0 { // case: Doesn't have
          script_addline("You need a flashlight to enable it!", c_red) audio_play_sound(chat_error,1,false)
          }
          break;
          
          case "moveable":
          if global.movement = false
          {
          global.movement = true
          script_addline("You enabled your movement!", c_green) audio_play_sound(chat_command,1,false)
          global.extend = false
          } else {
          script_addline("Movement is already enabled!", c_red)audio_play_sound(chat_error,1,false)
          }
          break;
          
          default: script_addline("Error: " + items + string(" not found"), c_red)audio_play_sound(chat_error,1,false)
          }
        keyboard_string = '' } else 
    
    
    
    if string_pos('/disable ',keyboard_string) = 1 {
    items = string_copy(keyboard_string,10,string_length(keyboard_string)-9)
    switch (items)
        {
          case "flashlight":
          if global.flashlight = 2 { // case: ON
          script_addline("You turned off your flashlight!", c_green)audio_play_sound(chat_command,1,false)
          } else if global.flashlight = 1 { // case: OFF
          global.flashlight = 2;
          script_addline("Your flashlight is already turned off!", c_red)audio_play_sound(chat_error,1,false)
          global.extend = false;
          } else if global.flashlight = 0 { // case: Doesn't have
          script_addline("You need a flashlight to disable it!", c_red)audio_play_sound(chat_error,1,false)
          }
          break;
          
          case "moveable":
          if global.movement = true
          {
          global.movement = false
          script_addline("You disabled your movement!", c_green) audio_play_sound(chat_command,1,false)
          global.extend = false
          } else {
          script_addline("Movement is already disabled!", c_red) audio_play_sound(chat_error,1,false)
          }
          break;
          
          default:
          { 
          script_addline("Error: " + items + string(" not found"), c_red) 
          audio_play_sound(chat_error,1,false)
          }
          }
        keyboard_string = ''} else 
          
          
          
        if string_pos('/open ',keyboard_string) = 1 {
        items = string_copy(keyboard_string,7,string_length(keyboard_string)-6)
        switch (items){
            case "door": {
                if (doorClosed&amp;&amp;aConnected) {
                    openADoor()
                    script_addline("The Door is now open.", c_green) 
                    audio_play_sound(chat_command,1,false)
                    global.extend = false
                } else if(doorClosed&amp;&amp;bConnected) {
                    openBDoor()
                    script_addline("The Door is now open.", c_green) 
                    audio_play_sound(chat_command,1,false)
                    global.extend = false
                } else {
                    script_addline("Error: Door is already open.", c_red) 
                    audio_play_sound(chat_error,1,false)
                }
            } break;
            
            default: {
            script_addline("Error: " + items + string(" not found"), c_red) 
            audio_play_sound(chat_error,1,false)
            } break;
        }
        
        keyboard_string = ''} else 
        
        if string_pos('/close ',keyboard_string) = 1 {

        
        keyboard_string = ''} else 
        
        /*
        if string_pos('/var ',keyboard_string) = 1 {
        variable[index] = string_copy(keyboard_string,6,string_length(keyboard_string)-5)
        script_addline("Variable: " + variable[i] + string(" was created."),c_green) audio_play_sound(chat_command,1,false)
        index++
        keyboard_string = ''} else 
        */
        
        if string_pos('/install ',keyboard_string) = 1 {
        items = string_copy(keyboard_string,10,string_length(keyboard_string)-9)
        switch (items){
            case "OS":if installed == false
            {
            script_addline("OS was installed successfully!", c_green) audio_play_sound(chat_command,1,false)
            with (char_dummy)
              instance_destroy()
            script_addline("Deleting OS...", c_green) 
            installed = true
            script_addline("OS was successfully deleted.", c_green) 
            global.extend = false;
            } else {script_addline("OS could not be found.", c_green) audio_play_sound(chat_command,1,false)}
            break;
        default: script_addline("Error: " + items + string(" not found"), c_red)audio_play_sound(chat_error,1,false)
        }
        keyboard_string = ''} else

        if string_pos('/debug ',keyboard_string) = 1 {
        items = string_copy(keyboard_string,8,string_length(keyboard_string)-7)
        switch (items) {
        case "movement":
        character.image_angle = image_angle-45
        break;
        default: script_addline("Error: " + items + string(" not found"), c_red)audio_play_sound(chat_error,1,false)
        }
        
        keyboard_string = ''} else
        
        if string_pos('/connect ',keyboard_string) = 1 {
        items = string_copy(keyboard_string,10,string_length(keyboard_string)-9)
        switch (items) {
        
        case "S.101":
        if installed
        {
            if object_exists(obj_computer1)
            {
                script_addline("You are now connected to " + string(items) + string(", port: ") + string(irandom_range(100,65535)), c_green) audio_play_sound(chat_command,1,false)
                aConnected = true
            } else {
                script_addline("Could not connect to " + string(items), c_red) audio_play_sound(chat_error,1,false)
            }
        } else {
            script_addline("You do not have correct hardware.", c_red) audio_play_sound(chat_error,1,false)
        }
        
        break;
        
        case "S.102":
        if installed
        {
            if object_exists(obj_computer2)
            {
                script_addline("You are now connected to " + string(items) + string(", port: ") + string(irandom_range(100,65535)), c_green) audio_play_sound(chat_command,1,false)
                bConnected = true
            } else {
                script_addline("Could not connect to " + string(items), c_red) audio_play_sound(chat_error,1,false)
            }
        } else {
            script_addline("You do not have correct hardware.", c_red) audio_play_sound(chat_error,1,false)
        }
        break;
        
        default: script_addline("Error: " + items + string(" not found"), c_red)audio_play_sound(chat_error,1,false)
        }
        keyboard_string = ''} else 
        
        if string_pos('/',keyboard_string) = 1 {
        script_addline("Your command was not recognized!", c_red) audio_play_sound(chat_error,1,false)
        } else {
        script_addline(keyboard_string,c_white);
        audio_play_sound(chat_send,1,false)
    }
draw_set_color(c_white)
keyboard_string = ''
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.paused = false
    if global.extend = false 
        {
            global.extend = true;
            keyboard_string = global.temp_string;
        } else {
            global.extend = false;
            global.temp_string = keyboard_string;
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>150,150</point>
  </PhysicsShapePoints>
</object>
